{"version":3,"file":"switchField.js","sourceRoot":"","sources":["../../../src/switchField.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AACxD,OAAO,EAAE,WAAW,EAAoB,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAStD;;GAEG;AACH,MAAM,UAAU,WAAW,CAAC,KAAuB;IACjD,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEvB,mBAAmB,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAE/C,MAAM,CAAC,KAAK,EAAE,AAAD,EAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,GAAG,gBAAgB,CAAU,IAAI,CAAC,CAAC;IAC5E,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;IAElC,OAAO,CACL,oBAAC,WAAW,OACN,KAAK,EACT,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,EAAE;YAChB,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChB,UAAU,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,EACD,KAAK,EAAE,KAAK,GACZ,CACH,CAAC;AACJ,CAAC","sourcesContent":["import React from 'react';\nimport { useConditionalField } from './conditionalForm';\nimport { SwitchInput, SwitchInputProps } from './switchInput';\nimport { useFieldError } from './useFieldError';\nimport { useMemoizedField } from './useMemoizedField';\n\nexport interface SwitchFieldProps extends Omit<SwitchInputProps, 'value' | 'onChange'> {\n  /**\n   * Field name\n   */\n  readonly name: string;\n}\n\n/**\n * Material-UI Switch with Formik support.\n */\nexport function SwitchField(props: SwitchFieldProps) {\n  const { name } = props;\n\n  useConditionalField(props.name, 'SwitchField');\n\n  const [field, , { setValue, setTouched }] = useMemoizedField<boolean>(name);\n  const error = useFieldError(name);\n\n  return (\n    <SwitchInput\n      {...props}\n      value={field.value}\n      onChange={value => {\n        setValue(value);\n        setTouched(true);\n      }}\n      error={error}\n    />\n  );\n}\n"]}